
const fs = require('fs');
const path = require('path');
const aiData = require('./index.json')

const data = aiData.map((item) => {
    return item.image_paths.map((image_path, i) => {
        image_path = image_path.replace('results/experiment-1/', '')
        return {
            ...item,
            image_path,
            image_path_i: i + 1
        }
    })
}).flat()


/*


        <div>
        <p>In Take, users construct text-based meme templates, where other users can fill in the blanks. For example - <a href="https://take-xyz.vercel.app/t/your-honor-please-my-client-was-simply-xx-58">"your honour please, my client was simply [xx]"</a> has been remixed many times, with takes like "your honour please, my client was simply being altruist" to "your honour please, my client was simply where is my funds". In essence, by proposing a template, the user is prompting the mimetic hive mind of the social media</p>
            <p>Likewise, generative AI also use prompts, whether it be text-based or image-based AI. A prompt is used to guide the AI towards the concept in latent space.</p>
            <p>Everything you see below is more hivemind than individual. The takes were remixed from other takes, a form of prompting. The images were generated by DALL-E. The prompts for the images were generated by ChatGPT. The prompt itself was generated using another prompt, the prompt generator prompt. And finally, even this website was largely written by an AI - Github CoPilot.</p>
        </div>
*/


let html = `
<!DOCTYPE html>
<html>
<head>
    <title>Take Modern (WIP)</title>
    <meta charSet="utf-8"/>
    <meta name="viewport" content="width=device-width"/>
    <style>
        body {
            font-family: "Helvetica Neue", sans-serif;
            font-size: 16px;
        }
        .container {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            grid-gap: 10px;
            padding: 10px;
        }
        .container > div {
            background: white;
        }
        .image {
            background: white;
            display: grid;
            /* display grid, 1st column is image, 2nd column is caption */
            grid-template-columns: 1fr;
            grid-template-rows: 1fr auto;

            margin: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            overflow: hidden;


            transition: all 0.5s ease;
        }
        .image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        h3, h4 {
            margin: 0;
        }
        a {
            color: #000;
        }
        .image:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }
        .image .caption h3 {
            margin-bottom: 1rem;
        }
        .image .caption .title {
            font-size: 1.6em;
            font-style: italic;
            font-weight: bold;
        }
        .image .caption .date {
            font-size: 1.6em;
            font-weight: normal;
        }
        .image .caption .materials {
            font-size: 1.4em;
            font-weight: normal;
        }
        .image .caption p {
            font-size: 1.1em;
            margin: 0;
        }

        .image .caption {
            padding: 10px;
        }

        .page-link-box {
            display: block;
            padding: 1rem;

            border: 1px solid transparent;
            background: #333;
            color: #fff;
            text-decoration: none;


            background-image: url('/images/bg.jpg');
            color: white;
            z-index: -1;
            animation: gradient 10s ease-in-out infinite;
            transition: all 100ms ease-in-out;
            border-radius: 5px;
        }
        
        .page-link-box:hover {
            opacity: 0.8;
        }


/* Animated background of gradient image */
.background {
  background: url('/bg.jpg') no-repeat center center fixed;
  background-size: cover;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  animation: gradient 30s ease infinite;
}

@keyframes gradient {
  0% {
    background-position: 0% 50%;
    /* opacity: 0; */
  }
  50% {
    background-position: 100% 50%;
    /* opacity: 1; */
  }
  100% {
    background-position: 0% 50%;
    /* opacity: 0; */
  }
}





    </style>
</head>
<body>
    <div class="container">
        <div>
            <h2>Take Modern</h2>
            <p>The Take Modern is a collection of 532 generative art pieces. It's a collaboration between a mimetic social media, a text-based generative AI, and an image-based generative AI.</p>
            <p>Each hot take was made by a human, and then the ChatGPT AI was given the take and a prompt to generate a scene. The scene was then translated into an image prompt, and rendered by another AI, DALL-E, into a PNG image.</p>
            <p>The piece questions the differences between internet hive minds, generative AI, and human creativity. It also questions the role of the artist in the age of AI.</p>

            <p><strong>Read more:</strong></p>
            <a class="page-link-box" href="https://www.youtube.com/watch?v=dQw4w9WgXcQ">
            <div>
                The creative process
            </div>
            </a>
        </div>
        
        ${data.map((item) => {
            return `
                <div class="image">
                    <img src="/${item.image_path}" loading="lazy" />
                    <div class="caption">
                        <h3>
                            <span class="title">${item.take.text}</span>
                        </h3>
                        <span class="date"><a href="https://take-xyz.vercel.app/t/${item.take.nft_id}">no. ${item.take.nft_id}/${item.image_path_i}</a></span>
                        <p>${item.scene_desc}</p>
                        
                    </div>
                </div>
            `
        }).join('')}
    </div>
</body>
</html>
`

{/* <h4 class="materials">Scenegen by GPT-3/ChatGPT, image rendered by DALL-E on PNG</h4> */}
// <span><strong>Prompt</strong>: ${item.image_prompt}</span>
/* 
<span><strong>Take:</strong> ${item.take.text} (<a href="https://take-xyz.vercel.app/t/${item.take.nft_id}">#${item.take.nft_id}</a>)</span>
<br />
<span><strong>Scene</strong>:${item.scene_desc}</span>
<br />
*/

fs.writeFileSync(path.join(__dirname, 'index.html'), html, 'utf8');
